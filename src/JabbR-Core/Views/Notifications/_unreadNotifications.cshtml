@using JabbR_Core
@using JabbR_Core.ViewModels
@model NotificationsViewModel
@{
    var notificationsViewModel = Model as NotificationsViewModel;
}


    <ul id="notifications-container" class="unstyled" data-mode="unread">
        @foreach (var notification in notificationsViewModel.Notifications)
        {
            @if (!notification.Read) { 
            <li data-notification-id="@notification.NotificationKey" class="notification-item @(!notification.Read ? "notification-unread" : "")">
                
                    <a href="#" title="@LanguageResources.Notifications_MarkAsRead" class="pull-right js-mark-as-read" data-action-url="@Url.Content("~/notifications/markasread")" data-notification-id="@notification.NotificationKey">
                        <i class="icon-large icon-ok-circle"></i>
                    </a>
                
                <blockquote>
                    <p class="@(notification.HtmlEncoded ? "" : "linkify")">@notification.Message</p>
                    <small>
                        <img class="gravatar" src="https://secure.gravatar.com/avatar/@notification.FromUserImage?s=16&amp;d=mm" />
                        @Html.Raw(String.Format(LanguageResources.Notifications_MetadataInfo,
                                                                    /* Encoder.HtmlEncode(*/notification.FromUserName,//),
                                                                                                                      /*Encoder.HtmlEncode(*/notification.RoomName,//),
                                                                                                                                                                   /*Encoder.HtmlEncode(*/notification.WhenString))
                    </small>
                </blockquote>
            </li>
            }
        }

        </ul>
@if (notificationsViewModel.Notifications.Count == 0)
{
    <p id="no-notifications" class="well well-large">@LanguageResources.Notifications_NoUnread</p>
}

